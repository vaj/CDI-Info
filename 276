YouTube:https://youtu.be/udA2nuBHiHo
Text:
Hi everybody, I am Willie Nelson. If you don't know me already, you probably don't want me to sing, so I won't do that, but maybe you can listen to me for a few minutes here.You know, a bunch of these questions here that were just asked are right in line with what I was going to talk about, and actually I'm not talking a bunch about our CPUs.Everybody knows that Intel has our CPUs, and we've got CXL support, and we're active members of the consortium, and definitely trying to make this a successful transition.But my emphasis is really more about CXL as being a revolutionary new technology as opposed to evolutionary, and the enabling efforts that go into that are significant.And, you know, I like to say it takes a village, and we are that village. The people at this conference are the village that needs to make CXL happen.So, you know, we have a strong upswell. A lot of what was just spoken about has to do with the industry support and the activities behind it.But a lot of it has to do with technology.A lot of the things that have to happen, such as the software to support all these new use models and the memory tiering that has largely been done, you know, at proprietary accounts to this point, is now public.It's now, you know, a standard, and the effort needed to do that continues.So, really, my emphasis is on industry enablement and what it takes to make CXL successful.

So, in the interest of a little time and hopefully to get you all to eat today, I'm going to be pretty quick with these.These slides are exactly what Siamak just showed.So, I just wanted to show not just whose the companies are, but the diversity of these companies.You know, it's not just CPU vendors or memory vendors or hardware vendors that are doing all this.It's a wide variety, and it spans the industry, and it's actually very impressive.If you've been involved with any standards organizations over the years, this list of companies is about as comprehensive as it can get.And that's going to continue and is necessary to make CXL happen.

Similarly, this is also another slide that Siamak just showed, and I wanted to show that not only is it those core companies that are members of the board, but all these other companies are coming up with hardware solutions, filling in the gaps and finding the use cases that need to be fulfilled.Many of these hardware companies at the bottom are developing products that previously didn't exist.You know, CXL switches, for example, that are now being introduced with CXL2 and expanding in CXL3, you know, largely the PCIe switch market is pretty narrow.There's a couple of vendors.There's many more that are seeing the opportunities here, and they're coming up with early silicon that is innovative.And not just that, adding functionality into those switches that may not be there with PCIe because of these use case opportunities coming up.

And then this one I just thought I'd mention also.This is a Siamak slide that he was just showing.And one of the key issues with industry enablement, and by the way, I didn't say it at the beginning, but for those that don't know, I work for Jim Pappas.And many of you know Jim Pappas.He couldn't be here.He asked me to say hi, by the way.So, yeah.Jim expresses his sincere condolences for not missing or regrets for not being able to be here, but he had a previous engagement.But often in these environments, there's competing technologies.And, in fact, we saw that when CXL came out.Both of these, Gen Z and OpenCAPI in particular, had similar or different approaches to solving some of the same problems.And by this consolidation that's happening and those people all contributing, like Siamak mentioned, it gets a solution into one space which makes enablement much more clear and much more direct with everybody involved because you're not having to solve.People doing software aren't having to do two, three different solutions because of the interface they're using.Now with CXL, solving all the same problems, it enables us to really focus and move forward a little quicker than we might have otherwise done it.The headwinds are less.

And then this is also the last slide of Siamak that I'm going to show.And I just added at the bottom the crawl, walk, run.So there were some questions about when it was going to happen.And I think from our experience with all technologies.I'll give you an example.It's PCIe 5.So PCIe is what we'd consider not a revolutionary technology but evolutionary, right?We already talked about it.We have PCIe 1, 2, 3, 4.We get to 5.It's a speed bump.Sometimes like PCIe 6, for example, is adding some complexity there, some new things, some new changes in the software side.But really PCIe 5 is largely a speed bump.So the validation and the productability of that.I don't know if that's the right word.But it's pretty predictable.We go through.We test the new speeds.There's a lot of hardware, the SI side of it.We make sure that nothing breaks as far as timing goes and things like that.But it's pretty straightforward, right?CXL is very different.And in this case, you know, we really do need a crawl, walk, run.So CXL 1.1 has come out.A lot of POCs.A lot of demos.A lot of testing to see what's necessary.A lot of identifying the gaps that we have to close.Significantly in software in particular.Because all those proprietary solutions now have to go to the masses.And they have to go to the standard distribution operating systems and standard tools, right?So as we go through 2.0 and 3.0, I think that's what we're going to see.Is that walk is going to get many more deployments.You know, when we get with CXL 2.0, there will be definitely end users and customers that will be deploying CXL 2.0 in the wild, so to speak.And then with CXL 3.0, we really see it broadening out.You know, and this goes from both the number of hardware devices.Both the number of hardware devices that are available.The number of CPUs that are available that support 2.0 and then 3.0 will expand significantly across that timeframe.And clearly the software and the support tools to get there to market will be there as well.

So this is just a kind of a catch-all slide showing all these complexities I'm talking about.So, you know, getting the new revolutionary technology, it requires obviously the hardware developers.And we have to get their silicon in hand.And by the way, that is in hand.And if you haven't seen it, there's a number of demos over in the booth.We're selling some native CXL silicon now as opposed to FPGA implementations.Please go look those up and talk to those vendors.They're doing great work and they're leading the charge here.The IP providers, of course, have been working for a long time.They go into all those hardware silicons.The controller vendors oftentimes are not productizing their product directly.They're doing the, you know, similar to a drive controller and an SSD.They're doing that front-end controller, but then somebody else is going to take their product and validate it and sell it.And that adds complexity to the level of validation we have to do here, right?And then obviously the product vendors.And then on the other side is the stuff that's really new for a revolutionary product.The software tools.What they're doing.You know, all the efforts that they're putting into testing and developing use cases that are viable in the market.If it wasn't for that, this would largely remain a niche or more precisely companies that own their whole stack that can write and develop and do their own tiering and do all that.The memory manipulation that they do.It's necessary to really benefit from this as much as possible.But now these other solutions are coming out.It becomes a standard.Everybody gets tools.We test it at different levels.And we can tier up the memory.And obviously the peer-to-peer solutions add to that as well.You know, those are coming in parallel.And, you know, operating system support and the drivers for the devices.That goes kind of without saying, right, that those are necessary to make it work.And then the applications.As mentioned, the MemVerge.You know, how are we going to use this?What level of tiering are we going to do?When shipped?What tiering is happening?How is that being managed?At what level?All those come into play here.And that's another level of validation and enabling that has to be done.Otherwise, this remains very corner case.You know, we're not seeing that happen because of the industry surrounding what's going on with CXL.

So then one other comment I guess I'll make here is the validation of CXL because it's different.This is memory specific.It's not the same comparison when we're talking about accelerators and peer-to-peer devices.You know, DDR is basically done with large configurations.And historically, the DDR controllers have been in the CPUs or controlled by the CPU vendors, one of the two.And so that validation largely gets done by the CPU vendors in partnership with the DDR vendors directly.It's a one-to-one partnership, full validation.Everything possible gets validated.And if it's not validated, it's not supported.PCIe, on the other hand, is opposite of that.It's done through the SIG.Largely, the compliance is done through the PCIe SIG.And all CPUs have to test and validate pretty much everything.And so what happens is you get a broad brush of what's validated.Occasionally, there's a product that comes along that wasn't validated, that doesn't work.That gets debugged and solved iteratively, but it gets done because it's a large open socket situation.CXL is kind of a combination of the two, right?There's DDR behind a controller, but it's external to the CPU.So now the CPU, you know, the various CPUs are focused on testing.You know, that interaction with that controller.But what goes on behind it is largely outside of it.And yet those companies in the past, you know, controller vendors for DDR memory have been CPU vendors for years, right?So these new vendors that are doing these controllers need a lot of help.And gladly and luckily, or not luckily, intentionally, the CPU vendors are heavily engaged with those companies doing these controllers.Both Intel and the other CPU vendors are engaged, trying to make sure that that validation gets done properly.That it's done well, so that it's reliable and the solution in the end is as robust as it is coming out of the CPU.The end result, I think, after a crawl, walk, run, after we get to that, you know, PCIe or CXL 3.0 timeline, we're going to see CXL modules and CXL devices being largely like PCIe devices, where they're tested, it's an open socket.If there's an issue, it gets solved, and the industry becomes robust in that manner, right, where it can handle everything.Initially, I think it's going to be a little less than that.There's going to be some limits on what's validated and tested, a little bit more on the DDR side, where initially we're going to have to say these CXL devices work and have been validated, and, you know, deploy them at your will and however you like.And then I think as we get farther down the road into the run stage, it'll become largely PCIe-like.So it is a different paradigm, right?We've never had this before.We've never had a disaggregation of memory controllers like we're going through right now.And it's nontrivial, but luckily, really, the industry is coalescing behind this.

And then one other comment here.This is kind of some details of what I just talked about, the different validation going on at the different levels.The one on the left is what the CPU and host do.The one in the middle is what the CXL module vendors, the memory module vendors, are going to do, what they're going to focus on, the level of validation and functionality that they're going to try and ensure is robust.And then on the right is what the end users and the OEMs are going to do.They're going to take these systems, they're going to integrate them into their CPU host and switches and all the memory modules they want, and then they're going to use their software on it and make sure that it works in their use case.So it's a three-tiered approach, to be certain.And again, I think we've got great momentum behind this, but we're not done.So we need to keep doing it.A little comment in the middle there, if you're seeing what the green box is, is that we are trying to also consolidate and focus on what those form factors are going to be for CXL modules.I think there's a lot of unknowns behind that.And so through JEDEC, we're trying to establish that these are the CXL modules.It's largely behind EDSFF at this point.But if you're interested in that, hit us up and ask questions.So again, a massive coordinated effort.We are the village.I urge you, our call to action here is if you're not involved already, please jump in, because this is happening, and it's going to get bigger and bigger and bigger, and we're all going to benefit.

So hopefully that was helpful.Any questions?

Yeah, it's actually – yeah, Siamak can maybe – I'll answer for them.But the consortium is all ready.There's already a working group, a compliance working group in the consortium, and the testing has already started, actually.The developing test suite is there already.I don't believe there's going to be a tested compliance list until 2.0 deployment.Is that right, Siamak?Or when are we going to have a tested approved compliance list?Has that started already?

The team is working on it.We're collaborating with PCI-SIG.Yeah, so just if you couldn't hear him, collaboration with the PCI-SIG, it will be very much PCI-SIG-like.And it's in process already.

Absolutely.I don't know if it will be combined.It will be aligned is a better word.

Yeah.Yes?

I'll just ask now.Three timers.So there was a comment earlier from Siamak about 50 nanoseconds per switch per direction.As the latency target through switches.With PCIe, the four retimers started.With 5, what is the expectation for retimers per so many centimeters?And then what is the target latency including retimers?

Yeah, so the, you know, retimer, again, CXL is based on PCIe, right?So PCIe retimers are 100% CXL compatible.Protocol that runs on PCIe.And the way you run it is different than the electrical.So retimers are purely electrical passing it through.However, there are some latency reduction efforts in place.There's the standard through a retimer is the same as a switch, less than 50 nanoseconds.That's the expectation.All of them natively, I believe, are below that that I'm aware of.And I actually work with them, so I can say that for sure.But there's also low latency modes with numerous retimers that get it below, you know, 10 nanoseconds through a retimer hop, right?So, again, that's getting there.Getting it to the device at the end.The switch adds some functionality, which adds latency.And so keeping that low is critical.But the retimer itself can be very low and very little impact.And, of course, redrivers are also an option as well if you're just trying to go a couple more inches in PCB or whatever.But, you know, the speeds we're talking about do require more retimers than the past.But we also find, you know, between ultra-low loss material and things like that, there are ways of getting around that if your latency is most critical.
