
Okay, guys, so I'm John Leung.  So I'm the project lead for the OCP workstream profile, which we actually just started this year.  I'm also on the OCP steering committee, and I represent them through the hardware management project.  In addition, I'm a principal engineer at Intel, and my last title is I'm the representative to the DMTF, which owns the Redfish interface.  So you'll see me speaking a lot about that. 

So the Redfish and Interop profile.  So OCP has specified Redfish as the manageability interface for their platforms.  I'll be talking about how far we've gotten along.  But in specifying it, you can write a whole bunch of requirements.  The problem is requirements exist in documents, and documents are hard to read.  So Redfish actually created the concept of profiles.  Profiles are JSON formatted files, and they can be used to auto-generate tests and test a conforming implementation.  So the organization we have between DMTF and OCP is the DMTF is what I call descriptive standards body.  They describe standards, and their job is to extend Redfish into as many management domains as they possibly can, from the data center of data to the edge of the data center with DSIM to other areas of manageability that can occur.  So out of that, we've actually, within DMTF, actually created alliance partnerships with other organizations that specialize in other management domains.  OCP specializes in data centers, both the edge of the data center of cooling and power, or the actual compute.  We have a relationship with the open group for OPAF, and they do process automation, which is automated factories.  So they've adopted Redfish about four or five years ago.  They've been pushing this out into the process automation industry, and they have at least three profiles because they split the profiles to manage hardware, to manage the operating systems and stuff that run on top of it.  So they've been very active in pushing Redfish in that domain, and they've actually utilized the entire profile mechanism to get their implementations in line.  And when we had our discussion with OPAF, it was, oh, we have this great thing called profiles.  It'll do most of your testing for you.  And they said, yeah, we took a look at it, John, but you see, automated factories are the lifeblood of a company, and your tests are good, but not good enough for us.  So we have to go re-implement on top of it stuff that cannot fail because you cannot shut off the manufacturing floor.  Open Infra, we've had a relationship where they have OpenStack, and so they've written a profile of if you want to snap into OpenStack, you need to conform to this OpenStack profile, which they've published.  We're in talks with StarlingX, which is doing their Edge implementations and trying to start up a profile so that if you meet these requirements for manageability, you can snap up to StarlingX at the Edge.  So in addition, Target, I think, joined OCP about last year and started looking at profiles, and they actually did a session on their Meetup series about profiles and how, one, profiles work and they should start utilizing these in their enterprise.  And so they're interested in trying to do a profile for an enterprise data center.

So this slide just says exactly what you do with a profile.  So profiles are written in JSON.  The DMTF has implemented a validator, interrupt validator, which actually consumes the profile, auto-generates the test, and then runs it against a conformant implementation.  And then just issues you a pass/fail.  So this is all in open source that DMTF owns.  If you look at the OCP profile website, it actually names all three validators that are implemented for Redfish.  One is the interrupt, just to make sure that you have all the resources and properties that OCP requires, but there's also one to validate the protocol and validate all the services that need to be required.  So by running all three, you are basically fully conformant to the Redfish standard.  So one thing issue about profile is that it's written in JSON, which means first you have to understand JSON.  And then there's a semantic we put on top of JSON called the profile semantic.  Most people don't want to know this, especially as we talk to go to other organizations like the server project and the networking project.  We cannot show them a JSON profile.  They'll walk out of the room.  So what we've done is we've created another manifestation of a profile, which I call user's guide.  And a user's guide is basically a Word document, which you can read and they can go assess.  And that's what we bring to other projects, because then we can have a cognitive discussion about what we're interested in, which are what use cases are you interested in.  And once we agree upon that, then the hardware management project can convert that discussion and user's guide into a set of profiles.

So the next slide is exactly what a profile looks like.  So it basically has a table of use cases.  And then each use case points down to a set of interactions.  So in this case is get the status of a chassis.  You issue a get request, because Redfish is RESTful.  So this is a standard RESTful request.  This is a fragment of the response you get back.  It has a structure called status.  It has two properties within it.  From that, anyone not skilled in the art of writing your profile can understand exactly what we're trying to do within Redfish.  And they can comment about whether that is sufficient information for status and provide us feedback on it.  So once that's done, so we go through the entire use case table that way.  And then at the very top of the usage document, it says that this use case is reflected and correlated to a profile.  And it will actually list the profile.  And that profile is in the OCP GitHub.  So there's a one-to-one correlation.  As soon as the user's guide is the one that gets contributed to OCP, it's the one that gets approved by the steering committee.  Once it gets approved, the profile gets elevated to release status and now can be accessed by the general community.

So user's guides and profile changes.  So what we have so far is everything is on GitHub.  So we use the entire GitHub process.  So if you run a profile, you run into a problem, you can file a GitHub issue.  We meet on a monthly basis to go through these issues, sign corrections.  It can end up to be something that needs to be changed in the user's guide.  It can be something that needs to be changed in the Redfile itself.  So because these things are interface definitions, we have a very strict revision control mechanism so that the way we name revisions, you can understand what the backward compatibility of these are.  So right now, all the profiles are at 1.0.  That means we can do a .rev to 1.1, 1.2, 1.3.  You should not have to change any of your client code to run this.  It should just run.  If you want to take advantage of new features that are available in 1.1, which are not in 1.0, you may have to add code.  But if you don't want to use any of the new features, you don't have to add code.  And then a ..rev is basically you should not have to change anything.  This was an errata change.  Someone found a typo.  We fixed it.  We shipped it out.  It has no functional change to the system.  And this is the discipline we got from the DMTF, who specializes in standardization of interfaces.  And we know the primary value is that we not change, force the infrastructure that uses the interface to change every time we roll a revision.  So backward compatibility is a very important discipline within the way we do Redfish profiles.  So in that vein, we've taken the baseline profile, which I'll talk about in the next slide, from 1.0 to 1.1, recently released, and the open RMC, which is the Rack Manager interface, talked about, I think, in the first slide, we've just taken to 1.1. 

So I've talked about user guides.  So user guides are -- we started writing them in Word.  We decided to abandon Word.  We went to GitHub.  It's fully now in markdown.  So if you find a textual problem within a user guide, we go through the same process to fix it.  Submit an issue.  We assign it.  We generate a pull request, and we can go fix it.  Part of requiring to do that -- oh, we use the markdown, GitHub flavor markdown, of course, since we're part of GitHub.  Part of what we're doing here is in order to do this, we actually have a publishing tool that we utilize that once we have the markdown the way we want it, we can push it through the document generation tool, and it will publish both the PDF and the HTML.  And the PDF is what gets moved up and shown in the contribution portal.  And this is something that the rest of OCP is evaluating as a tool chain so that they can move some of the other documentation, which are all across OCP, into markdown.  We started doing this because it's very common in DMTF to have to do this for profiles.  And my goal is to expand it within the hardware management project proper before I go on to other projects and tell them that you should go do this, too.  So hopefully with the move of OCP toward a more GitHub process, a more disciplined process, we can get this going.

Okay.  So within OCP, we've had the baseline for quite a while.  The baseline is baseline manageability across all OCP platforms.  And most people don't see profiles unless you contribute a product.  If you contribute a product into the marketplace, one of the requirements is that it adhere to a profile.  So most of them have baseline, because the way we constructed this was baseline was common manageability.  Every platform can extend above it.  So if you're a storage platform and you have disk drives, you can add additional requirements that disk drives need to be modeled within your manageability.  We did servers.  Servers exist.  The server profile exists and it's for CPUs, so on and so forth.  And then as I mentioned, there's Rack Manager, which is how do I manage above groups of nodes that all support Redfish.  So the presentations and global summit for this Rack Management Profile, which will occur in about an hour, and then the liquid cooling profile will occur tomorrow at the cooling environments.  So it's occurring in the cooling environments because, again, another aspect of profiles is that, as I mentioned, we are not the subject matter experts on most of this stuff.  They are.  The other projects are.  So when the cooling environments project expressed interest in doing a profile, we ran over there and we said, you guys are the SMEs.  We understand manageability.  We will help you every step of the way to get this to a profile stage.  So they basically are in the process of-- they've helped us define and finalize the Redfish models to support what they need.  And now they're going through and setting new requirements.  So which of these resources need to occur, which of the properties need to occur, and which of the values of properties need to occur.  So that will be sometime tomorrow afternoon.  Also there are two new profiles which are occurring.  So in the diagram on the top, the system-level profiles, so platform-level profiles, what we're finding is people contributing are component-level profiles.  I don't want to define profile for all of it.  I have a specific component I want managed via Redfish.  How do I do that?  So we now have a concept of component-level profiles.  And the one that we have is the power shelf.  So we're not managing the entire rack yet, but we have a profile that's needed to manage just the power shelf portion of that profile, which will snap into something larger as soon as we figure out what the platform profile looks like.  We also have Ethernet switch profile, which is if you're a switch within networking, there are some basic things you need to be able to do to an Ethernet switch.  And so we're starting at the fundamental lowest layer of an Ethernet switch and say, I think we can get general agreement that everyone needs to go do this, and then from there we can extend topward. 

So I've mentioned most of this.  This is the liquid cooling profile that we are going to talk about tomorrow.  We released the actual models themselves earlier this year, and that allowed the OCP, Highway Management for Liquid Cooling, to actually begin discussion.  So we're very working in kind of tandem with them, that they help us release the profile, work on the profile.  We release it, and then it's open now for public consumption and general discussion within OCP.  So we try to be as open as possible and get things out into the industry so they can be commented on.

So the next two slides are just the use cases.  So this is the only thing that we would bring to the other projects, is go have a discussion about this, have a discussion about the interactions that would occur in order to fulfill these profiles, and they can tell us whether it's sufficient, whether they need more use cases, so on and so forth.  So this is the internet switch.  As I told you, it's fairly general.  The functional switch elements get you a list of switches.  Redfish doesn't support just one node.  It supports a multitude of nodes across the data center.  On the switch, status, physical context of the switch itself, the chassis, information about the chassis, switches as modules, modules as ports, ports as ethernet interfaces.  Fairly simple.  So that's basically how you cascade down the structure to get you what you want.  Each one of these will return information about the modules, the ports, the ethernet.  Ports, of course, support V4 and V6 information.  And then as a baseline on almost all resources, if they have a system log, then you want to be able to fetch your system log.  And we think this is minimal.  So if you think something has to be added to this minimum, come talk, have the discussion.  We have not actually approached the networking project yet.  I broached it with them when I met them this week, and they're eager to have this discussion for us to bring this in because they very much like to get into the manageability side of networking.

The power shelf.  So this is the bottom, top of the rack where power comes in.  This is our initial estimate on what that component profile would be.  So we have both a physical aspect of resources and a functional aspect.  So the physical aspect is the sheet metal and everything involving the sheet metal and parts.  And the functional aspect, well, this piece of sheet metal is a power supply.  So therefore, there are specific attributes and properties of that power supply.

And so that leaves me with a call of action is that, well, attend the rack manager session, stay in your seats for us to talk about that.  Attend the session next week if you're interested in liquid cooling.  Provide feedback.  And now that we have everything on GitHub, it's fairly easy to file issues against the usage guide or the profiles as you get them.  And then test your products in accordance, especially if it's going to become a product.

Any effort so far that you've come across for accelerator profiles

Oh, yes.  Yes.  So when Drew was up here, he talked about GPU manageability.  So the GPU has actually a group.  What reason why we formed them is they own three documents.  They own GPU management.  They own full update of GPUs.  And they own GPU RAS.  All three of them specify Redfish Interface.

Right.  But OK.  So it's the same compliance.

It will be the same compliance.  And one of the reasons they want to join the group was they wanted to start figuring out how to write the user's guides to start driving this.

OK. I'll talk to you again.

OK.

For the publishing guide, is that something open source?  Or the usage guide that has the publishing tools, are those open source?

That's an interesting position.  So the publishing tools are owned by the DMTF.  They have made them available to all the Alliance partners.  So all the Alliance partners-- that's why I went to OCP.  And I said, we got these tools.  Want to use them?  They're evaluating.  They've taken more than three months, and they haven't gotten an answer back.  So I went, and I said, fine.  You can figure out-- if you're figuring out using this publishing tool or someone else's, I don't care as long as I start with Markdown and I end with a PDF and HTML.  So you guys go through whatever process you guys need to go figure it out.  I'm going to start with Markdown.  And I'll plug in whatever you guys have when you guys decide what that is.  But for now, it's Alliance partners.  And I think only the project leads who have access to them because they're part of the foundation.  But the ultimate goal is there's no particular reason that these cannot be open source.  But the DMTF is very wary about making anything public source, which will get a lot of interaction and pulls from it and possibly bugs filed against it.  So the Alliance partners and at DMTF, I'm VP of Alliances.  So I form all the alliances, is that we will use the alliances to do a soft open on these tools to make sure we fix any bugs that we need to before we give it general availability and make it true open source.

Maybe follow up then.  If you-- excluding the specific software, would you consider updating the Interop profile spec to add Markdown as a more well-defined, user-friendly method for creating profiles?

That is-- I would say it is because this is the only way I could get the other projects to pay attention.  You walk in with a profile, they don't want to talk to you.  You walk in with a user's document that they can actually consume and respond to and is in a format that they understand, they will give you feedback as fast as you can take it.  So it's necessary because of the type of community that OCP is, it's got a bunch of SMEs that understand stuff that need feedback on.  Is it something that DMTF wants to know about?  Possibly not.  They might say, that's great because that's good for the community you're working in, but within DMTF, it may not be.  And so who writes profiles?  What I've said is that DMTF is a descriptive body.  It describes, goes into as many details as it wants.  We need prescriptive bodies to actually make the requirements.  They're the only ones people listen to.  OCP has OCP Accepted and OCP Inspired.  People listen to that.  And if an RFP says, you shall have the OCP Accepted, OCP Accepted says, you shall comply to baseline profile, we're done.  I mentioned OPAF early on, who does process automation.  They did profiles by themselves.  They say, hey, profiles aren't that difficult.  We understand JSON.  They wrote it all.  They have no interest in ever using a user's guide.  So it's really, really up to the nature of the prescriptive power on whether there are a community.  Lots of people need to understand this.  Or OPAF, which is a small steering group, which says, yes, the five of us can go figure out what a profile is and have one person go write it.

John, just one thing to add on that.  So the publication tool that John's talking about is really just the conversion from markdown to HTML and PDF.  And there's commercial software involved in those scripts.  And it's finicky.  So that's the constraints there.  In terms of taking a profile document and making a usage guide, there is an open source tool from the DMTF called the documentation generator.  And it has a mode that will consume both the schema files and the profile document and will create a, you know, effectively a requirements doc that looks like the other schema guides that DMTF publishes for Redfish.  That will not be sufficient for explaining a usage guide, but it can provide you effectively -- I'm doing this right now for one of my profiles I'm trying to finish.  So it will produce you basically the reference guide of, like, here are the resources and the properties and the requirements, all the stuff that comes out of the profile.  And then you just start adding your usage guide, you know, as front material that get merged in as part of that tool.  So that part of the tool chain is freely available and it's open source.  And that will produce a markdown.  I think at the end of the day, if you produce a markdown usage guide and a JSON profile document and send it to -- and put it into the GitHub or contribute it to OCP, one of the leads will go take that and run it through the publication tool.  But everyone can already read the markdown.  It's just not in that final format for consumption by everyone.  So the tooling -- there's lots of tooling there.  Let's not get too hung up on that last little bit.  It's not like we're doing hundreds of profiles.  So I think all of us project leads will be more than happy to run that to completion for that last little bit.

All right.  Makes sense.  Thanks.  I'll stop by the booth.  We can chat more about this after.

Okay. Let's thank John.
